<section class="services-section">
  <div class="heading-with-toggle">
    <h2>Explore services</h2>
    <label class="switch">
      <input type="checkbox" id="toggle-details" />
      <span class="slider"></span>
    </label>
  </div>

  <div class="grid">
    <div class="tile">
      <h3>Service A</h3>
      <p class="details">Details about A</p>
    </div>
    <div class="tile">
      <h3>Service B</h3>
      <p class="details">Details about B</p>
    </div>
    <div class="tile">
      <h3>Service C</h3>
      <p class="details">Details about C</p>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleEl = document.getElementById('toggle-details');
    if (!(toggleEl instanceof HTMLInputElement)) return;
    const toggle = toggleEl;
    const tiles = document.querySelectorAll('.tile');

    function isExpanded(tile) {
      const details = tile.querySelector('.details');
      return details instanceof HTMLElement && details.style.display === 'block';
    }

    function updateSwitchVisualState() {
      const allExpanded = Array.from(tiles).every(isExpanded);
      toggle.checked = allExpanded;
    }

    tiles.forEach(tile => {
      tile.addEventListener('click', () => {
        const details = tile.querySelector('.details');
        if (!(details instanceof HTMLElement)) return;
        const isVisible = details.style.display === 'block';
        details.style.display = isVisible ? 'none' : 'block';
        tile.classList.toggle('expanded', !isVisible);
        updateSwitchVisualState();
      });
    });

    toggle.addEventListener('change', () => {
      const shouldShow = toggle.checked;
      tiles.forEach(tile => {
        const details = tile.querySelector('.details');
        if (!(details instanceof HTMLElement)) return;
        const isVisible = details.style.display === 'block';
        if (isVisible !== shouldShow) {
          details.style.display = shouldShow ? 'block' : 'none';
          tile.classList.toggle('expanded', shouldShow);
        }
      });
    });
  });
</script>


<style>
    .services-section {
    padding: 0;
    margin: 0;
  }

  .heading-with-toggle {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  h2 {
    margin: 0;
  }

  .switch {
    position: relative;
    display: inline-block;
    width: 50px;
    height: 28px;
  }

  .switch input {
    opacity: 0;
    width: 0;
    height: 0;
  }

  .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    border-radius: 34px;
    transition: 0.4s;
  }

  .slider:before {
    position: absolute;
    content: "";
    height: 20px;
    width: 20px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: 0.4s;
    border-radius: 50%;
  }

  input:checked + .slider {
    background-color: var(--T1-links);
  }

  input:checked + .slider:before {
    transform: translateX(22px);
  }

  .grid {
    display: grid;
    gap: 1rem;
    grid-template-columns: 1fr;
    max-width: 860px;
    margin: 0 auto;
  }

  .tile {
    padding: 0.75rem;
    background: #CCCCCC;
    border-radius: 10px;
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.1);
    transition: background-color 0.2s ease, border 0.2s ease;
    cursor: pointer;
    color: black;
    border: 2px solid transparent;
  }

  .tile:not(.expanded):hover {
    background: var(--T1-links);
    color: white;
  }

  .tile.expanded {
    background: white;
    color: #292929;
    border: 2px solid var(--T1-links);
  }

  .tile.expanded h3,
  .tile.expanded .details {
    color: #292929;
  }

  .tile h3 {
    font-size: 1.1rem;
    line-height: 1.3;
    margin: 0;
  }

  .tile .details {
    display: none;
    margin-top: 0.25rem;
    margin-bottom: 0;
    font-size: 0.95rem;
    line-height: 1.4;
  }

</style>
